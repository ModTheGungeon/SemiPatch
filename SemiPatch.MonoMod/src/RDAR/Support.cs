using System;
using Mono.Cecil;

namespace SemiPatch.RDARSupport {
    /// <summary>
    /// Added by <see cref="MonoModStaticConverter"/> to members tagged with
    /// <see cref="TargetNameAttribute"/>.
    /// </summary>
    public class NameAliasedFromAttribute : Attribute {
        public NameAliasedFromAttribute(string name) { }
    }

    /// <summary>
    /// Added by <see cref="MonoModStaticConverter"/> to methods tagged with
    /// <see cref="ReceiveOriginalAttribute"/>.
    /// </summary>
    public class HasOriginalInAttribute : Attribute {
        /// <summary>
        /// The name of the method generated by <see cref="MonoModStaticConverter"/>
        /// as part of the members of the type, which will be replaced by the
        /// MonoMod static patcher with the original contents of the modified method.
        /// </summary>
        public string OrigName;

        public HasOriginalInAttribute(string name) { OrigName = name; }
    }

    internal static class RDARSupport {
        public static ModuleDefinition SemiPatchMonoModModule;
        public static TypeDefinition RDARSupportNameAliasedFromAttribute;
        public static TypeDefinition RDARSupportHasOriginalInAttribute;

        static RDARSupport() {
            SemiPatchMonoModModule = ModuleDefinition.ReadModule(System.Reflection.Assembly.GetExecutingAssembly().Location);
            RDARSupportNameAliasedFromAttribute = SemiPatchMonoModModule.GetType("SemiPatch.RDARSupport.NameAliasedFromAttribute");
            RDARSupportHasOriginalInAttribute = SemiPatchMonoModModule.GetType("SemiPatch.RDARSupport.HasOriginalInAttribute");
        }
    }
}
